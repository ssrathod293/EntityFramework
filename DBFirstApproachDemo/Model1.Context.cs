//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBFirstApproachDemo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class B20WinDBContext : DbContext
    {
        public B20WinDBContext()
            : base("name=B20WinDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<usp_ActiveRoles_Result> GetActiveRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ActiveRoles_Result>("GetActiveRoles");
        }
    
        public virtual ObjectResult<usp_UserByRegisterDate_Result> GetUserByRegisterDate(Nullable<System.DateTime> registeredDate)
        {
            var registeredDateParameter = registeredDate.HasValue ?
                new ObjectParameter("RegisteredDate", registeredDate) :
                new ObjectParameter("RegisteredDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserByRegisterDate_Result>("GetUserByRegisterDate", registeredDateParameter);
        }
    
        public virtual int usp_GetRoleNameById(Nullable<int> roleId, ObjectParameter roleName)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetRoleNameById", roleIdParameter, roleName);
        }
    }
}
